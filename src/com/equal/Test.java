package com.equal;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

/*
 * @class: Test
 * @description: 
 * @author: L.zhen
 * @date: 2019/1/3 15:16
 */
public class Test {
	public static void main(String[] args) {
		test001();
	}
	
	private static void test001() {
		String[] sunbo = {"20170112224429109732","20170113113102770541","20170113113935655892","20170113143856593041","20170115111923642629","20170117205433330849","20170118111010237172","20170120114629651493","20170120114831508849","20170120152838258964","20170120204100567252","20170120204510711787","20170121143132992387","20170121143518645101","20170121165649763319","20170124145745531012","20170124150017991021","20170125124151574723","20170125124407363103","20170125175354894036","20170125175853363805","20170125215559807319","20170125215932389411","20170126110714616858","20170126111001685057","20170127222420714116","20170202054447275545","20170202140803672544","20170203075525217195","20170203133348266134","20170203140310192091","20170204131931866100","20170204132010302200","20170204202112729656","20170204202740602419","20170205175217945874","20170205224753623881","20170206092259050674","20170206102801852564","20170206134438898343","20170206143618653389","20170207081232066058","20170207113959558831","20170207144506030126","20170207144551100176","20170207144627636770","20170207192337400618","20170207192411220191","20170208082101633273","20170208094222696069","20170208094349573161","20170208094706445159","20170208133323409679","20170208141549866657","20170208141617631660","20170208195650316141","20170208212018751060","20170208221912350650","20170210122716778080","20170210151457525586","20170210164202375060","20170213154318623865","20170213154325283045","20170213182117086166","20170213215912867596","20170213220002500353","20170213220121970917","20170214222607442123","20170214225011573871","20170215061017665188","20170215083620424799","20170219174608707036","20170219174728932149","20170219182017396954","20170219232033572480","20170220152018333552","20170220165640084205","20170221113037697795","20170222105621632996","20170225103045428704","20170226124922786850","20170227125249046893","20170301112913544284","20170301131004906292","20170301154003220300","20170301170328659761","20170302135903188053","20170302192243360713","20170302192611939890","20170302232545426755","20170303152121038242","20170303152524383876","20170303190036088385","20170303190143618734","20170304203424573608","20170305202858137019","20170305203002968478","20170306154321566383","20170307131536896776","20170307150415317464","20170307155849076021","20170308163302623866","20170308182347382892","20170309145417060386","20170310134211708071","20170312100210600036","20170314182703941981","20170314183647068928","20170315092148081906","20170316091243490032","20170316092920832848","20170320165446832442","20170320212708011293","20170320223257461100","20170321083857534450","20170323142332683683","20170324172743756848","20170328105526399585","20170328151548558871","20170328174856927969","20170329151719436010","20170330104928241203","20170330133657138953","20170330230506978140","20170403203040084903","20170404111036297839","20170405152704055819","20170408120015218072","20170409104102909138","20170410152118630707","20170410154709859095","20170410160011303507","20170410164824201551","20170411095123539167","20170411095429025225","20170411122927084888","20170411155049662325","20170414112637851291","20170415181906851761","20170415181936210414","20170415183101227455","20170415183140764354","20170417120555723218","20170417163324762363","20170417163420647981","20170418082419407566","20170418131540437795","20170418151301307733","20170418152748806156","20170418155212989869","20170419104208325479","20170419111005516610","20170419222727217554","20170419234533563280","20170423161710297969","20170424172300070844","20170425085523001362","20170427191126746872","20170504151031904725","20170508133743244382","20170508134000976077","20170510224539936326","20170510232954842820","20170512165103232953","20170515082443195753","20170515082450112069","20170515082500870165","20170515082602169058","20170515133140320086","20170515142243389555","20170516070726552802","20170523105639336634","20170523163414176495","20170525142106871288","20170525143939524135","20170525145627935758","20170525145846295815","20170609144539604881","20170613100631366784","20170731183338625448","20170803121853136631","20170803175309410665","20170811171601140058","20170814124411644661","20170919214902673934","20170928181902197871","20171011192423771743","20171101183626428763","20171104204104071310","20171104204307789748","20171105174719100281","20171106101141923507","20171107213428679783","20171109110614210489","20171110102843694592","20171112131548439630","20171112152940190161","20171112165910472416","20171112171357976518","20171112175852802805","20171112185543022278","20171112185717425417","20171112190153660591","20171112234507749763","20171112234656382212","20171115171328987933","20171120113449161464","20171120165537646175","20171120165933109635","20171121174134021302","20171121182519144380","20171121221909006755","20171123101156331136","20171123223742907759","20171123224943719251","20171123231630797473","20171125142225532316","20171125142432788283","20171125142648904529","20171125142936389695","20171127103432117392","20171127170016257679","20171128113120349654","20171129085715442852","20171130130828729812","20171130131849439948","20171130144952118337","20171201092747070358","20171201112007610854","20171201190343588029","20171203163003902394","20171203164800824546","20171204154303714125","20171204154750994152","20171204210429844809","20171205103806769575","20171205150851001577","20171205150929765567","20171205153156644315","20180110153203427797","20180426100233932458","20180504092227286067","20180929164558998814","20181024141125214515","20181111201511015997","20181229151222823589","20181229143152687329","20181229150922962258"};
		String[] database = {"20170112224429109732","20170113113102770541","20170113113935655892","20170113143856593041","20170115111923642629","20170117205433330849","20170118111010237172","20170120114629651493","20170120114831508849","20170120152838258964","20170120204100567252","20170120204510711787","20170121143132992387","20170121143518645101","20170121165649763319","20170124145745531012","20170124150017991021","20170125124151574723","20170125124407363103","20170125175354894036","20170125175853363805","20170125215559807319","20170125215932389411","20170126111001685057","20170127222420714116","20170202054447275545","20170202140803672544","20170203075525217195","20170203133348266134","20170203140310192091","20170204131931866100","20170204132010302200","20170204202112729656","20170204202740602419","20170205175217945874","20170205224753623881","20170206092259050674","20170206134438898343","20170206143618653389","20170207081232066058","20170207113959558831","20170207144506030126","20170207144551100176","20170207144627636770","20170207192337400618","20170207192411220191","20170208082101633273","20170208094222696069","20170208094349573161","20170208094706445159","20170208133323409679","20170208141549866657","20170208141617631660","20170208195650316141","20170208212018751060","20170208221912350650","20170210122716778080","20170210151457525586","20170210164202375060","20170213154318623865","20170213154325283045","20170213182117086166","20170213215912867596","20170213220002500353","20170213220121970917","20170215061017665188","20170215083620424799","20170219174608707036","20170219174728932149","20170219182017396954","20170219232033572480","20170220152018333552","20170220165640084205","20170221113037697795","20170222105621632996","20170225103045428704","20170226124922786850","20170227125249046893","20170301112913544284","20170301131004906292","20170301154003220300","20170302192243360713","20170302192611939890","20170303152121038242","20170303152524383876","20170303190036088385","20170303190143618734","20170304203424573608","20170305202858137019","20170305203002968478","20170306154321566383","20170307131536896776","20170307150415317464","20170307155849076021","20170308163302623866","20170308182347382892","20170310134211708071","20170312100210600036","20170315092148081906","20170316092920832848","20170320165446832442","20170320223257461100","20170321083857534450","20170323142332683683","20170324172743756848","20170328151548558871","20170329151719436010","20170330104928241203","20170330133657138953","20170330230506978140","20170403203040084903","20170404111036297839","20170405152704055819","20170408120015218072","20170409104102909138","20170410152118630707","20170410154709859095","20170410160011303507","20170410164824201551","20170411095429025225","20170411122927084888","20170411155049662325","20170414112637851291","20170415181906851761","20170415181936210414","20170415183101227455","20170415183140764354","20170417120555723218","20170417163324762363","20170417163420647981","20170418082419407566","20170418131540437795","20170418151301307733","20170418152748806156","20170418155212989869","20170419104208325479","20170419111005516610","20170419222727217554","20170419234533563280","20170423161710297969","20170424172300070844","20170425085523001362","20170504151031904725","20170508133743244382","20170508134000976077","20170510224539936326","20170510232954842820","20170512165103232953","20170515082443195753","20170515082450112069","20170515082500870165","20170515082602169058","20170515142243389555","20170516070726552802","20170523105639336634","20170523163414176495","20170525142106871288","20170525143939524135","20170525145627935758","20170525145846295815"};
		String[] hisRedeem = {"20170126110714616858","20170206102801852564","20170214222607442123","20170214225011573871","20170301170328659761","20170302135903188053","20170302232545426755","20170309145417060386","20170314182703941981","20170314183647068928","20170316091243490032","20170320212708011293","20170328105526399585","20170328174856927969","20170411095123539167","20170427191126746872","20170515133140320086","20170609144539604881","20170613100631366784","20170731183338625448","20170803121853136631","20170803175309410665","20170811171601140058","20170814124411644661","20170919214902673934","20170928181902197871","20171011192423771743","20171112234507749763","20180110153203427797","20180426100233932458","20180504092227286067","20180929164558998814","20181024141125214515","20181111201511015997"};
		String[] arr51 = {"20171101183626428763","20171104204104071310","20171104204307789748","20171105174719100281","20171106101141923507","20171107213428679783","20171109110614210489","20171110102843694592","20171112131548439630","20171112152940190161","20171112165910472416","20171112171357976518","20171112175852802805","20171112185543022278","20171112185717425417","20171112190153660591","20171112234656382212","20171115171328987933","20171120113449161464","20171120165537646175","20171120165933109635","20171121174134021302","20171121182519144380","20171121221909006755","20171123101156331136","20171123223742907759","20171123224943719251","20171123231630797473","20171125142225532316","20171125142432788283","20171125142648904529","20171125142936389695","20171127103432117392","20171127170016257679","20171128113120349654","20171129085715442852","20171130130828729812","20171130131849439948","20171130144952118337","20171201092747070358","20171201112007610854","20171201190343588029","20171203163003902394","20171203164800824546","20171204154303714125","20171204154750994152","20171204210429844809","20171205103806769575","20171205150851001577","20171205150929765567","20171205153156644315"};
		
		System.out.println(sunbo.length);
		System.out.println(database.length);
		System.out.println(hisRedeem.length);
		List<String> sunboList = Arrays.asList(sunbo);
		List<String> databaseList = Arrays.asList(database);
		List<String> hisRedeemList = Arrays.asList(hisRedeem);
		List<String> l1 = notContains(databaseList, sunboList);
		List<String> l2 = notContains(hisRedeemList, l1);
		for (String s : l2) {
			System.out.println(s);
		}
	}
	
	private static List<String> notContains(List<String> a, List<String> b) {
		List<String> result = new ArrayList<>();
		for (String s : b) {
			if (!a.contains(s)) {
				result.add(s);
			}
		}
		return result;
	}
	
	
}






